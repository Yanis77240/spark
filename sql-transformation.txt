/$
                        sh '''
                        mysql -h 10.100.99.143 -u $user -p$pass -e "CREATE DATABASE IF NOT EXISTS SPARK2;"
                        '''
                        sh '''
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE test_list_${number} (Module VARCHAR(125), Test_Name VARCHAR(255)); LOAD DATA LOCAL INFILE 'scala-tests.txt' INTO TABLE test_list_${number} FIELDS TERMINATED BY 'txt:' LINES TERMINATED by '\n'; UPDATE test_list_${number} SET Module = REPLACE(Module, '/target/surefire-reports/SparkTestSuite.', '');"
                        '''
                        sh '''
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE aborted_tests_${number} (Module VARCHAR(125), Results VARCHAR(255)); LOAD DATA LOCAL INFILE 'aborted-tests.txt' INTO TABLE aborted_tests_${number} FIELDS TERMINATED BY 'txt:' LINES TERMINATED by '\n'; UPDATE aborted_tests_${number} SET Module = REPLACE(Module, '/target/surefire-reports/SparkTestSuite.', '');"
                        '''
                        sh '''
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE test_resume_${number} (Module VARCHAR(125), Results VARCHAR(255)); LOAD DATA LOCAL INFILE 'scala-end-results.txt' INTO TABLE test_resume_${number} FIELDS TERMINATED BY 'txt:' LINES TERMINATED by '\n'; UPDATE test_resume_${number} SET Module = REPLACE(Module, '/target/surefire-reports/SparkTestSuite.', ''); CREATE TABLE results_${number} (SELECT Module, SUBSTRING_INDEX(Results, ',', 1) AS Succeeded,     SUBSTRING_INDEX(SUBSTRING_INDEX(Results, ',', 2), ',', -1) AS Failed,     SUBSTRING_INDEX(SUBSTRING_INDEX(Results, ',', 3), ',', -1) AS Canceled, SUBSTRING_INDEX(SUBSTRING_INDEX(Results, ',', 4), ',', -1) AS Ignored, SUBSTRING_INDEX(SUBSTRING_INDEX(Results, ',', 5), ',', -1) AS Pending  FROM test_resume_${number}); drop table test_resume_${number}; UPDATE results_${number} SET Succeeded = SUBSTRING_INDEX(Succeeded, ' ', -1), Failed = SUBSTRING_INDEX(Failed, ' ', -1), Canceled = SUBSTRING_INDEX(Canceled, ' ', -1), Ignored = SUBSTRING_INDEX(Ignored, ' ', -1), Pending = SUBSTRING_INDEX(Pending, ' ', -1);"
                        '''
                        script{
                            def lastSuccessfulBuildID = 0
                            def build = currentBuild.previousBuild
                            while (build != null) {
                                if (build.result == "SUCCESS")
                                {
                                    lastSuccessfulBuildID = build.id as Integer
                                    break
                                }
                                build = build.previousBuild
                            }
                            println lastSuccessfulBuildID
                        }
                        sh '''
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE IF NOT EXISTS aborted_tests_${lastSuccessfulBuildID} AS SELECT * FROM aborted_tests_${number};"
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE comparison_aborted_${number} AS SELECT aborted_tests_${number}.Module, aborted_tests_${number}.Results FROM aborted_tests_${number} LEFT JOIN aborted_tests_${lastSuccessfulBuildID} ON aborted_tests_${number}.Module=aborted_tests_${lastSuccessfulBuildID}.Module WHERE aborted_tests_${lastSuccessfulBuildID}.Module IS NULL;"
                        '''
                        sh '''
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE IF NOT EXISTS test_list_${lastSuccessfulBuildID} AS SELECT * FROM test_list_${number};"
                        mysql -h 10.100.99.143 -u $user -p$pass SPARK2 -e "CREATE TABLE comparison_tests_${number} AS SELECT test_list_${number}.Module, test_list_${number}.Test_Name FROM test_list_${number} LEFT JOIN test_list_${lastSuccessfulBuildID} ON test_list_${number}.Test_Name=test_list_${lastSuccessfulBuildID}.Test_Name WHERE test_list_${lastSuccessfulBuildID}.Test_Name IS NULL;"
                        '''